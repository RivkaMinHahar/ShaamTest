import { AfterViewInit, ElementRef, OnInit, Renderer2 } from '@angular/core';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class MdbTableDirective implements OnInit, AfterViewInit {
    private el;
    private renderer;
    striped: boolean;
    bordered: boolean;
    borderless: boolean;
    hover: boolean;
    small: boolean;
    responsive: boolean;
    stickyHeader: boolean;
    stickyHeaderBgColor: string;
    stickyHeaderTextColor: string;
    constructor(el: ElementRef, renderer: Renderer2);
    private _dataSource;
    private _dataSourceChanged;
    addRow(newRow: any): void;
    addRowAfter(index: number, row: any): void;
    removeRow(index: number): void;
    rowRemoved(): Observable<boolean>;
    removeLastRow(): void;
    getDataSource(): any;
    setDataSource(data: any): void;
    dataSourceChange(): Observable<any>;
    filterLocalDataBy(searchKey: any): any;
    searchLocalDataBy(searchKey: any): any;
    searchDataObservable(searchKey: any): Observable<any>;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<MdbTableDirective, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<MdbTableDirective, "[mdbTable]", ["mdbTable"], { "stickyHeader": "stickyHeader"; "stickyHeaderBgColor": "stickyHeaderBgColor"; "stickyHeaderTextColor": "stickyHeaderTextColor"; "striped": "striped"; "bordered": "bordered"; "borderless": "borderless"; "hover": "hover"; "small": "small"; "responsive": "responsive"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=mdb-table.directive.d.ts.map